/*
 * Jeffrey
 * Copyright (C) 2024 Petr Bouda
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package io.jafar.parser;

import io.jafar.parser.JFRValueDeserializer;
import io.jafar.parser.internal_api.DeserializationHandler;

import java.util.HashMap;
import java.util.Map;

public final class Deserializers {
    private final Map<String, DeserializationHandler<?>> deserializers = new HashMap<>();

    public void addDeserializer(String name, JFRValueDeserializer<?> deserializer) {
        deserializers.put(name, deserializer);
    }

    // Used from handler generated bytecode
    public <T> DeserializationHandler<?> getDeserializer(String name) {
        return deserializers.get(name);
    }

    public DeserializationHandler<?> putIfAbsent(String key, DeserializationHandler<?> value) {
        return deserializers.putIfAbsent(key, value);
    }

    public void clear() {
        deserializers.clear();
    }
}
